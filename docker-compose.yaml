version: "3.7"
x-minio-common: &minio-common
  image: quay.io/minio/minio:latest
  command: server --console-address ":9090" http://minio{1...4}/data{1...2}
  expose:
    - "9000"
    - "9090"
  environment:
    MINIO_ROOT_USER: douyin
    MINIO_ROOT_PASSWORD: douyin123
  healthcheck:
    test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
    interval: 30s
    timeout: 20s
    retries: 3
services:
  # MySQL
  mysql:
    image: mysql:latest
    volumes:
      - ./pkg/configs/sql:/docker-entrypoint-initdb.d
    ports:
      - "3306:3306"
    environment:
      - MYSQL_DATABASE=douyin
      - MYSQL_USER=gorm
      - MYSQL_PASSWORD=gorm
      - MYSQL_RANDOM_ROOT_PASSWORD="yes"
  # ETCD
  Etcd:
    image: 'bitnami/etcd:latest'
    environment:
      - ALLOW_NONE_AUTHENTICATION=yes
      - ETCD_ADVERTISE_CLIENT_URLS=http://etcd:2379
    ports:
      - "2379:2379"
      - "2380:2380"

  # starts 4 docker containers running minio server instances.
  # using nginx reverse proxy, load balancing, you can access
  # it through port 9000.
  minio1:
    <<: *minio-common
    hostname: minio1
    ports:
      - "9090:9090"
    volumes:
      - ./data/data1-1:/data1
      - ./data/data1-2:/data2

  minio2:
    <<: *minio-common
    hostname: minio2
    ports:
      - "9091:9090"
    volumes:
      - ./data/data2-1:/data1
      - ./data/data2-2:/data2

  minio3:
    <<: *minio-common
    hostname: minio3
    ports:
      - "9092:9090"
    volumes:
      - ./data/data3-1:/data1
      - ./data/data3-2:/data2

  minio4:
    <<: *minio-common
    hostname: minio4
    ports:
      - "9093:9090"
    volumes:
      - ./data/data4-1:/data1
      - ./data/data4-2:/data2

  nginx:
    image: nginx:alpine
    hostname: nginx
    volumes:
      - ./config/nginx.conf:/etc/nginx/nginx.conf:ro
    ports:
      - "9000:9000"
    depends_on:
      - minio1
      - minio2
      - minio3
      - minio4
